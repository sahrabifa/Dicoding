# -*- coding: utf-8 -*-
"""Copy of Final Project Dicoding : Data Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S4jjdn5iqlMaQBWY8kWKxbCP7H0N2qVY

# Proyek Analisis Data: Bike Sharing Dataset
- Nama: Sahra Bilqis Fauziyyah
- Email: sabifa0251@gmail.com
- Id Dicoding: Sahra Bilqis Fauziyyah

## Menentukan Pertanyaan Bisnis

Pertanyaan

- Apakah terdapat pola harian dalam jumlah penyewa sepeda? (Misalnya, apakah ada peningkatan pada jam-jam tertentu?)

- Bagaimana pengaruh kondisi cuaca terhadap penggunaan sepeda?

- Bagaimana pola penggunaan sepeda berubah sepanjang musim? Apakah ada perbedaan signifikan dalam jumlah penggunaan sepeda antara musim tertentu?

## Menyaipkan semua library yang dibuthkan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
from babel.numbers import format_currency
sns.set(style='dark')

# Data Wrangling

# Gathering Data


#membaca data hour.csv
df_hour = pd.read_csv('all_data.csv')

# Misalnya, jika kolom 'dteday' masih dalam bentuk string, konversi ke tipe datetime.
df_hour['dteday'] = pd.to_datetime(df_hour['dteday'])

# Filter data untuk tahun 2011-2012
data_2011 = df_hour[df_hour['dteday'].dt.year == 2011]
data_2012 = df_hour[df_hour['dteday'].dt.year == 2012]

# Menghitung jumlah penyewa berdasarkan jam
total_cnt_by_hour = df_hour.groupby('hr')['cnt'].sum().reset_index()

# Menghitung jumlah penyewa berdasarkan jam
total_cnt_by_hour2011 = data_2011.groupby('hr')['cnt'].sum().reset_index()
total_cnt_by_hour2012 = data_2012.groupby('hr')['cnt'].sum().reset_index()

# Visualization & Explanatory Analysis
# 
st.header('Dicoding Bike Sharing Dashboard :sparkles:')

"""### Daily Bike Sharing Profile: Patterns of Increase at Certain Hours"
"""

# Menggabungkan data tahun 2011 dan 2012
total_cnt_by_hour_combined = total_cnt_by_hour.merge(total_cnt_by_hour2011, on='hr', suffixes=('_total', '_2011'))
total_cnt_by_hour_combined = total_cnt_by_hour_combined.merge(total_cnt_by_hour2012, on='hr')

# Mengurutkan DataFrame berdasarkan jumlah penyewa secara descending
sorted_total_cnt_combined = total_cnt_by_hour_combined.sort_values(by='cnt_total', ascending=False)

# Membuat objek Figure dari Matplotlib
fig, ax = plt.subplots(figsize=(12, 6))

# Membuat plot menggunakan Seaborn
sns.barplot(x='hr', y='cnt_total', data=total_cnt_by_hour_combined, color='blue', label='Total')
sns.barplot(x='hr', y='cnt_2011', data=total_cnt_by_hour_combined, color='darkgreen', label='2011', alpha=0.7)
sns.barplot(x='hr', y='cnt', data=total_cnt_by_hour_combined, color='green', label='2012', alpha=0.7)

# Konfigurasi plot
plt.xlabel('Hour')
plt.ylabel('Number of Bike Rented')
plt.title('Total Number of Renters by Hour (2011, 2012, and Total)')
plt.legend()

# Menampilkan objek Figure di Streamlit
st.pyplot(fig)

"""### Comparing "Bike Sharing" Usage in Different Weather Conditions"""

# Visualisasi untuk membandingkan penggunaan sepeda pada berbagai kondisi cuaca
sns.boxplot(x='weathersit', y='cnt', data=df_hour)
plt.xlabel('Weather')
plt.ylabel('Number of Bikes Rented')
plt.title('Comparison of Bicycle Usage in Various Weather Conditions')
plt.show()

# Definisi fungsi untuk menghapus outlier berdasarkan kondisi cuaca
def remove_outliers_by_weather(data):
    cleaned_data = pd.DataFrame()
    for weather_condition in data['weathersit'].unique():
        subset = data[data['weathersit'] == weather_condition]
        Q1 = subset['cnt'].quantile(0.25)
        Q3 = subset['cnt'].quantile(0.75)
        IQR = Q3 - Q1
        lower_bound = Q1 - 1.5 * IQR
        upper_bound = Q3 + 1.5 * IQR
        cleaned_data = pd.concat([cleaned_data, subset[(subset['cnt'] >= lower_bound) & (subset['cnt'] <= upper_bound)]])
    return cleaned_data

# Menghapus outlier berdasarkan kondisi cuaca
bike_data_no_outliers = remove_outliers_by_weather(df_hour)

# Visualisasi tanpa outlier
fig, ax = plt.subplots()
sns.boxplot(x='weathersit', y='cnt', data=bike_data_no_outliers, ax=ax)
ax.set(xlabel='Weather', ylabel='Number of Bikes Rented', title='Comparison of Bicycle Usage in Various Weather Conditions')

# Menampilkan plot di Streamlit
st.pyplot(fig)


"""Keterangan

1: Cerah, Sedikit awan, Sebagian berawan, Sebagian berawan

2: Kabut + Mendung, Kabut + Awan pecah, Kabut + Sedikit awan, Kabut

3: Salju Ringan, Hujan Ringan + Badai Petir + Awan berserakan, Hujan Ringan + Awan berserakan

4: Hujan Lebat + Hujan Es + Badai Petir + Kabut, Salju + Kabut

### Comparing the Use of "Bike Sharing" in Different Seasons
"""

# Menyusun data untuk setiap musim
spring_data = df_hour[df_hour['season'] == 1]
summer_data = df_hour[df_hour['season'] == 2]
fall_data = df_hour[df_hour['season'] == 3]
winter_data = df_hour[df_hour['season'] == 4]

# Menentukan ukuran plot
fig, ax = plt.subplots(figsize=(10, 5))

# Plot garis untuk setiap musim
sns.lineplot(x='mnth', y='cnt', data=spring_data, label='Spring', marker='o')
sns.lineplot(x='mnth', y='cnt', data=summer_data, label='Summer', marker='o')
sns.lineplot(x='mnth', y='cnt', data=fall_data, label='Fall', marker='o')
sns.lineplot(x='mnth', y='cnt', data=winter_data, label='Winter', marker='o')

# Konfigurasi plot
plt.xticks(range(1, 13))
plt.xlabel('Month')
plt.ylabel('Number of Bike Rented')
plt.legend(title='Season', loc='upper left')

# Menampilkan plot di Streamlit
st.pyplot(fig)

"""## Conclusion

1. Jumlah penyewa sepeda cenderung meningkat pada jam-jam tertentu dalam sehari.
Puncak peminjaman terjadi pada jam 17, diikuti oleh jam 18 dan jam 8.
Pada tahun 2012, terjadi peningkatan signifikan dalam jumlah penyewa sepeda pada beberapa jam dibandingkan tahun 2011.

2. Berdasarkan analisis data, terlihat bahwa penggunaan sepeda cenderung lebih tinggi pada kondisi cuaca yang cerah dan sedikit awan selama dua tahun berturut-turut (2011-2012) dengan total yaitu cuaca cerah sebanyak 2338173 penyewa dan cuaca berawan sebanyak 795952 penyewa.

3. Dari visualisasi perubahan penggunaan sepeda sepanjang musim, terlihat pola peningkatan penggunaan sepeda selama musim semi sampai musim panas (dari Desember sampai Juni) dan penurunan selama musim dingin (dari bulan September sampai Desember). Jumlah penyewa pada musim gugur lebih banyak dibandingkan musim lainnya selama dua tahun berturut-turut (2011-2012) yaitu sebanyak 1061129 penyewa

##Advice

1. **Saran terkait Peminjaman Jam-Jam Tertentu:**
   - Mempertimbangkan peningkatan ketersediaan sepeda pada jam-jam puncak seperti jam 17, 18, dan 8 untuk memenuhi permintaan yang tinggi.
   - Melakukan promosi khusus atau diskon pada jam-jam tertentu untuk mendorong peminjaman sepeda selama periode tersebut.

2. **Saran terkait Kondisi Cuaca:**
   - Menyusun strategi pemasaran atau promosi khusus untuk meningkatkan peminjaman sepeda pada hari-hari dengan cuaca cerah.
   - Mengidentifikasi peluang untuk meningkatkan peminjaman sepeda saat cuaca berawan dengan menawarkan diskon atau program khusus.

3. **Saran terkait Musim dan Tren Tahunan:**
   - Menyesuaikan inventaris sepeda dan penawaran khusus sepanjang musim, dengan fokus pada peningkatan stok selama musim semi dan panas.
   - Memperhatikan permintaan yang tinggi selama musim gugur dan mempersiapkan penawaran khusus untuk menarik lebih banyak peminjam sepeda.

Saran-saran ini dapat membantu meningkatkan pengalaman pengguna, mengoptimalkan ketersediaan sepeda, dan merespons perubahan dalam pola peminjaman sepeda. Dengan memahami tren dan faktor-faktor pengaruh, layanan penyewaan sepeda dapat disesuaikan untuk memenuhi kebutuhan pelanggan dengan lebih efektif.
"""

st.caption('Copyright Â© Dicoding Sahra Bilqis Fauziyyah 2023')

